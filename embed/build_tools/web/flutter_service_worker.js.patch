--- flutter_service_worker.js	2023-08-24 12:50:34
+++ flutter_service_worker_new.js	2023-08-24 12:53:55
@@ -38,21 +38,6 @@
 "canvaskit/skwasm.worker.js": "51253d3321b11ddb8d73fa8aa87d3b15"};
 // The application shell files that are downloaded before a service worker can
 // start.
-const CORE = ["main.dart.js",
-"index.html",
-"assets/AssetManifest.json",
-"assets/FontManifest.json"];
-
-// During install, the TEMP cache is populated with the application shell files.
-self.addEventListener("install", (event) => {
-  self.skipWaiting();
-  return event.waitUntil(
-    caches.open(TEMP).then((cache) => {
-      return cache.addAll(
-        CORE.map((value) => new Request(value, {'cache': 'reload'})));
-    })
-  );
-});
 // During activate, the cache is populated with the temp files downloaded in
 // install. If this service worker is upgrading from one with a saved
 // MANIFEST, then use this to retain unchanged resource files.
@@ -142,10 +127,20 @@
       return cache.match(event.request).then((response) => {
         // Either respond with the cached resource, or perform a fetch and
         // lazily populate the cache only if the resource was successfully fetched.
-        return response || fetch(event.request).then((response) => {
+        if (response) {
+          return response;
+        }
+
+        if (IN_PROCESSING_REQUESTS[key]) {
+          return IN_PROCESSING_REQUESTS[key].clone();
+        }
+
+        return fetch(event.request).then((response) => {
           if (response && Boolean(response.ok)) {
-            cache.put(event.request, response.clone());
+            cache.put(event.request, response.clone()).then(() => delete IN_PROCESSING_REQUESTS[key]);
           }
+
+          IN_PROCESSING_REQUESTS[key] = response.clone();
           return response;
         });
       })
